<P align=center><FONT size=3><STRONG>使用4017数字集成块扩展Arduino开关阵列</STRONG></FONT></P><BR>使用Arduino做制作，需要有一组开关控制Arduino状态。但是Arduino引脚不多，传统接法开关多了要占用很多引脚。减少引脚的方法有很多，可以选矩阵方式，编码器方式，还有本文要介绍的分时复用开关法等。<BR><BR>特点：十个开关占用三个数据引脚，之后每增加十个开关就增加一个引脚。<BR>4017是一块十进制计数器，每输入一个CLK脉冲，Q0~Q9轮流产生高电平。每时刻有且只有一个引脚高电平。<BR>二极管防止多个开关闭合时，有的输出端输出高电平，有的输出低电平，互相接上的话，会低电平引脚会干扰高电平脚的工作。<BR>开关用10路拨动式小型开关，或者自己选择其他开关形式。<BR><BR>电路工作原理：<BR>
<OL type=1>
<LI>先在RST（4017的复位脚MR）发出一个脉冲，使4017复位。</LI>
<LI>此时有且只有Q0输出高电平(Q0对应开关S1，Q9对应开关S10)，读取一次输出信号DATA。如果第一个开关S1闭合了，应该DATA得到高电平；如果S1断开了，就DATA得到低电平。此时记DATA结果对应第一个开关S1的状态。</LI>
<LI>给CLK输出一个脉冲，让4017移位，有且只有Q1输出高电平（Q0，Q2~Q9均为低电平）。读取DATA。得到S2状态。</LI>
<LI>不断给CLK脉冲。总共给10次脉冲，让4017由Q0移动到Q9，完成一次开关遍历，每次移动获取一次DATA状态。存为S1~S10状态。</LI></OL>
<P>关于在一块Arduino上使用多块模块：</P>
<P>每增加一块模块，可以增加十路开关（当然你也可以使用两块4017做成行列矩阵控制100个开关。不过那个就属于另外话题了）。增加的方式是将两块模块的RST，CLK，VCC，GND接在一起，接到单片机的相应引脚，然后两个模块的DATA脚分别接单片机两个IO口。<BR><BR><BR>电路原理图如图：</P>
<P><BR><BR>洞洞板图（由于引脚多，不建议面包板制作。）<BR><BR><BR><BR>Arduino程序例子： <BR><BR><BR></P><PRE><BR><BR><BR><FONT color=#0000ff>const</FONT> <FONT color=#0000ff>int</FONT> rst = <FONT color=#ff0000>2</FONT>; <FONT color=#008000>//板子的RST脚接Arduino的D4口(自定义) </FONT><BR><FONT color=#0000ff>const</FONT> <FONT color=#0000ff>int</FONT> clk = <FONT color=#ff0000>3</FONT>; <FONT color=#008000>//板子的CLK脚接Arduino的D3口(自定义) </FONT><BR><FONT color=#0000ff>const</FONT> <FONT color=#0000ff>int</FONT> data1 = <FONT color=#ff0000>4</FONT>; <FONT color=#008000>//板子的DATA脚接Arduino的D2口(自定义) </FONT><BR><FONT color=#008000>//const int data2 = 5; //如果有第二块板子的话，两块板子共用RST和CLK引脚。DATA接Arduino的D5口，第三块板子可以类推接D6口(自定义) </FONT><BR><FONT color=#0000ff>void</FONT> setup() <BR>{ <BR>Serial.begin(<FONT color=#ff0000>9600</FONT>); <BR>pinMode(rst, OUTPUT); <BR>pinMode(clk, OUTPUT); <BR>pinMode(data1, INPUT); <BR><FONT color=#008000>//pinMode(data2,INPUT); //如果有第二块板子的话要定义IO </FONT><BR>} <BR><FONT color=#0000ff>void</FONT> loop() <BR>{ <BR><FONT color=#0000ff>int</FONT> KeyStatus[<FONT color=#ff0000>10</FONT>] = {<FONT color=#ff0000>0</FONT>}; <FONT color=#008000>//按照总开关数定义。可能要改为20,30等 </FONT><BR>digitalWrite(rst, HIGH); <BR>delayMicroseconds(<FONT color=#ff0000>10</FONT>); <FONT color=#008000>//所有delayMicroseconds(10);均是给4017一个反应时间。 </FONT><BR>digitalWrite(rst, LOW); <BR>delayMicroseconds(<FONT color=#ff0000>10</FONT>); <BR><FONT color=#0000ff>for</FONT>(<FONT color=#0000ff>int</FONT> i = <FONT color=#ff0000>0</FONT>; i &lt; <FONT color=#ff0000>10</FONT>; i++) <BR>{ <BR>KeyStatus<EM> = digitalRead(data1); <BR></EM><FONT color=#008000>//KeyStatus[i+10] = digitalRead(data2); //读取第二个板子的状态，地址放在i+10 </FONT><BR>digitalWrite(clk, HIGH); <BR>delayMicroseconds(<FONT color=#ff0000>10</FONT>); <BR>digitalWrite(clk, LOW); <BR>delayMicroseconds(<FONT color=#ff0000>10</FONT>); <BR>} <BR><BR><FONT color=#0000ff>for</FONT>(<FONT color=#0000ff>int</FONT> i = <FONT color=#ff0000>0</FONT>; i &lt; <FONT color=#ff0000>10</FONT>; i++) <FONT color=#008000>//循环打印KeyStatus数组，i&lt;10可能要改为i&lt;20,30等 </FONT><BR>{ <BR>Serial.print(KeyStatus); <BR>Serial.print(<FONT color=#a31515>"\t"</FONT>); <BR>} <BR>Serial.println(); <BR>delay(<FONT color=#ff0000>100</FONT>); <BR>} <BR></PRE>&nbsp;