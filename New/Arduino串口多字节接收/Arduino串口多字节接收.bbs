<P align=center><FONT size=3>Arduino串口接收字符串</FONT></P><BR><BR>用惯Arduino串口传输的朋友都知道，Arduino的Serial.read()每次只能读一个字节，但是有时想进行字符串通讯，就很麻烦了。 <BR>废话少讲，直接上完整例子： <BR><BR>编译只要一块Arduino，不需要任何外置元件。 <BR>用Arduino编译器的串口监视器即可看到结果，我们打什么文字进去，下面就会返回什么文字。<BR><BR>
<DIV class=quote>
<P><SPAN class=quote></SPAN><BR><FONT color=#000000>String comdata </FONT><FONT color=#000080>= </FONT><FONT color=#808080>""</FONT><FONT color=#000080>; <BR><BR></FONT><FONT color=#0000ff>void </FONT><FONT color=#000000>setup</FONT><FONT color=#000080>() <BR>{ <BR></FONT><FONT color=#000000>Serial</FONT><FONT color=#000080>.</FONT><FONT color=#000000>begin</FONT><FONT color=#000080>(</FONT><FONT color=#800080>9600</FONT><FONT color=#000080>); <BR>} <BR><BR></FONT><FONT color=#0000ff>void </FONT><FONT color=#000000>loop</FONT><FONT color=#000080>() <BR>{ <BR><BR></FONT><FONT color=#008000>//下面代码是从串口读入数据 <BR></FONT><FONT color=#0000ff>while </FONT><FONT color=#000080>(</FONT><FONT color=#000000>Serial</FONT><FONT color=#000080>.</FONT><FONT color=#000000>available</FONT><FONT color=#000080>() &gt; </FONT><FONT color=#800080>0</FONT><FONT color=#000080>) </FONT><FONT color=#008000>//如果缓冲池不为空就执行下面的读 <BR></FONT><FONT color=#000080>{ <BR></FONT><FONT color=#000000>comdata </FONT><FONT color=#000080>+= </FONT><FONT color=#0000ff>char</FONT><FONT color=#000080>(</FONT><FONT color=#000000>Serial</FONT><FONT color=#000080>.</FONT><FONT color=#000000>read</FONT><FONT color=#000080>()); </FONT><FONT color=#008000>//从串口读入数据，并且转换为char类型之后加入comdata变量 <BR></FONT><FONT color=#000000>delay</FONT><FONT color=#000080>(</FONT><FONT color=#800080>2</FONT><FONT color=#000080>); </FONT><FONT color=#008000>//延时一下让缓冲池有足够时间接收数据，理论上大点好。不过会影响程序速度。 <BR></FONT><FONT color=#000080>} <BR></FONT><FONT color=#000080><BR></FONT><FONT color=#008000>//下面代码是输出comdata的内容，并且在输出完之后，清空comdata <BR></FONT><FONT color=#0000ff>if </FONT><FONT color=#000080>(</FONT><FONT color=#000000>comdata</FONT><FONT color=#000080>.</FONT><FONT color=#000000>length</FONT><FONT color=#000080>() &gt; </FONT><FONT color=#800080>0</FONT><FONT color=#000080>) </FONT><FONT color=#008000>//看看comdata有没内容，有就执行下面语句输出 <BR></FONT><FONT color=#000080>{ <BR></FONT><FONT color=#000000>Serial</FONT><FONT color=#000080>.</FONT><FONT color=#000000>println</FONT><FONT color=#000080>(</FONT><FONT color=#000000>comdata</FONT><FONT color=#000080>); </FONT><FONT color=#008000>//输出comdata <BR></FONT><FONT color=#000000>comdata </FONT><FONT color=#000080>= </FONT><FONT color=#808080>""</FONT><FONT color=#000080>; </FONT><FONT color=#008000>//清空comdata，不让它每次都有内容被输出 <BR></FONT><FONT color=#000080>} <BR><BR>}</FONT></P></DIV><BR>代码很简单，comdata是一个字符串类型变量。Serial.available()是当前串口缓冲池的数据量。Serial.read()是读缓冲池的语句，每次只能读一个字节。<BR>用了String类型变量，很简单的实现了字符到字符串的加入，还有字符串输出，赋值等麻烦问题，所以很简单的代码就能处理串口数据。<BR>特别留意的是读串口时的delay(2)不能删掉，否则串口缓冲区不够时间接受数据。即使调小延时也会出错。